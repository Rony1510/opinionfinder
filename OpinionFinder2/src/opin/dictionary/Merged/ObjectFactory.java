//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.0 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.07.10 at 10:06:49 AM EDT 
//


package opin.dictionary.Merged;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the dictMergedRuppenhofer package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: dictMergedRuppenhofer
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Sw }
     * 
     */
    public Sw createSw() {
        return new Sw();
    }

    /**
     * Create an instance of {@link MajorClassType }
     * 
     */
    public MajorClassType createMajorClassType() {
        return new MajorClassType();
    }

    /**
     * Create an instance of {@link MorphoSyntaxType }
     * 
     */
    public MorphoSyntaxType createMorphoSyntaxType() {
        return new MorphoSyntaxType();
    }

    /**
     * Create an instance of {@link Syntactic }
     * 
     */
    public Syntactic createSyntactic() {
        return new Syntactic();
    }

    /**
     * Create an instance of {@link PosType }
     * 
     */
    public PosType createPosType() {
        return new PosType();
    }

    /**
     * Create an instance of {@link Lexicon }
     * 
     */
    public Lexicon createLexicon() {
        return new Lexicon();
    }

    /**
     * Create an instance of {@link EntryDefinitionSwType }
     * 
     */
    public EntryDefinitionSwType createEntryDefinitionSwType() {
        return new EntryDefinitionSwType();
    }

    /**
     * Create an instance of {@link CompositionType }
     * 
     */
    public CompositionType createCompositionType() {
        return new CompositionType();
    }

    /**
     * Create an instance of {@link OriginalSw }
     * 
     */
    public OriginalSw createOriginalSw() {
        return new OriginalSw();
    }

    /**
     * Create an instance of {@link LexiconMetadataType }
     * 
     */
    public LexiconMetadataType createLexiconMetadataType() {
        return new LexiconMetadataType();
    }

    /**
     * Create an instance of {@link WordType }
     * 
     */
    public WordType createWordType() {
        return new WordType();
    }

    /**
     * Create an instance of {@link WordNetSense }
     * 
     */
    public WordNetSense createWordNetSense() {
        return new WordNetSense();
    }

    /**
     * Create an instance of {@link MajorClassListType }
     * 
     */
    public MajorClassListType createMajorClassListType() {
        return new MajorClassListType();
    }

    /**
     * Create an instance of {@link SemanticGroupingType }
     * 
     */
    public SemanticGroupingType createSemanticGroupingType() {
        return new SemanticGroupingType();
    }

    /**
     * Create an instance of {@link PosListType }
     * 
     */
    public PosListType createPosListType() {
        return new PosListType();
    }

    /**
     * Create an instance of {@link Order }
     * 
     */
    public Order createOrder() {
        return new Order();
    }

    /**
     * Create an instance of {@link OriginalMw }
     * 
     */
    public OriginalMw createOriginalMw() {
        return new OriginalMw();
    }

    /**
     * Create an instance of {@link ElementType }
     * 
     */
    public ElementType createElementType() {
        return new ElementType();
    }

    /**
     * Create an instance of {@link Ruppenhofer }
     * 
     */
    public Ruppenhofer createRuppenhofer() {
        return new Ruppenhofer();
    }

    /**
     * Create an instance of {@link Mw }
     * 
     */
    public Mw createMw() {
        return new Mw();
    }

    /**
     * Create an instance of {@link EntryDefinitionMwType }
     * 
     */
    public EntryDefinitionMwType createEntryDefinitionMwType() {
        return new EntryDefinitionMwType();
    }

    /**
     * Create an instance of {@link LemmaType }
     * 
     */
    public LemmaType createLemmaType() {
        return new LemmaType();
    }

}
